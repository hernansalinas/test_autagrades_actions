# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest Pylint
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics


    - name: Lint with pylint
      run: |
        # Run pylint on the source directory and save the report as a text file
        pylint src/ --exit-zero > pylint_report.txt
        # Upload the report as an artifact
        
    - name: Upload pylint report as artifact
    
      uses: actions/upload-artifact@v3
      with:
        name: pylint-report
        path: pylint_report.txt

    - name: Test with pytest
      run: |
        pytest --doctest-modules test/test_01.py Students/Salinas_431/actividad_01.py
    # pytest --doctest-modules test/test_01.py Student/${{ github.event.pull_request.user.login }}_*/actividad_01.py
    #pytest --doctest-modules test/test_01.py Student/${{ github.event.head_commit.author.name }}_*/actividad_01.py
